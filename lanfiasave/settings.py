# """
# Django settings for lanfiasave project.
#
# Generated by 'django-admin startproject' using Django 5.1.4.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """
# import os
# from pathlib import Path
#
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
#
#
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
#
# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-z)xlo_#r7lblxct2w(ile6(xo)iv=8#i3(9ayr9-x(&h3l8dsq'
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
#
# # ALLOWED_HOSTS = []
#
#
#
# # Application definition
#
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'corsheaders',
#     'users',
#     'donations',
#     'detection',
#     'notifications',
#     'rest_framework',
#     'rest_framework.authtoken',
#     'formation',
#
# ]
#
# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',  # Doit être en première position
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]
#
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8000",
#     "http://192.168.100.27:8000",
#     "http://127.0.0.1:8000",
#     "http://localhost:52589",
#     "https://lanfiasave.onrender.com",
#
#     # Port de développement React
# ]
# CORS_ORIGIN_WHITELIST = [
#     'http://192.168.100.27:8000',
#     'http://localhost',
#     'http://127.0.0.1',
# ]
# CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS
#
# # Configuration des cookies
# CSRF_COOKIE_SAMESITE = 'Lax'
# SESSION_COOKIE_SAMESITE = 'Lax'
# CSRF_COOKIE_HTTPONLY = True  # Autoriser la lecture via JavaScript
# SESSION_COOKIE_HTTPONLY = True
# CSRF_COOKIE_SECURE = False    # Désactivé en développement
# SESSION_COOKIE_SECURE = False # Désactivé en développement
# # Exécution synchrone des tâches Celery en local
# CELERY_TASK_ALWAYS_EAGER = True
# CELERY_TASK_EAGER_PROPAGATES = True
#
# CELERY_BROKER_URL = 'redis://localhost:6379/0'
# CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
#
#
#
# # Configuration d'authentification REST
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.TokenAuthentication',
#         'rest_framework.authentication.SessionAuthentication', # Nécessaire pour le navigateur
#
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
# }
#
# # Configuration supplémentaire
# CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken']
# CORS_ALLOW_CREDENTIALS = True
# # settings.py
# ALLOWED_HOSTS = ['127.0.0.1',
#                  '192.168.1.102',
#                  'localhost',
#         'lanfiasave.onrender.com',]
#
#
# CORS_ALLOW_ALL_ORIGINS = True
#
# LOGIN_URL = '/users/login/'
#
#
# ROOT_URLCONF = 'lanfiasave.urls'
# AUTH_USER_MODEL = 'users.User'
#
# from corsheaders.defaults import default_headers
#
# CORS_ALLOW_HEADERS = list(default_headers) + [
#     'authorization',
# ]
#
#
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR / 'templates']
#         ,
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]
#
# WSGI_APPLICATION = 'lanfiasave.wsgi.application'
#
#
# # Database
# # https://docs.djangoproject.com/en/5.1/ref/settings/#databases
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
#
#
# # Password validation
# # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
#
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator','OPTIONS': {
#             'min_length': 8,
#         }
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
#     # {
#     #     'NAME': 'django.contrib.auth.backends.ModelBackend',
#     # }
# ]
#
# # Internationalization
# # https://docs.djangoproject.com/en/5.1/topics/i18n/
#
# LANGUAGE_CODE = 'fr-fr'
# # LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
#
# USE_I18N = True
#
# USE_TZ = True
#
#
# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.1/howto/static-files/
#
# STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     BASE_DIR / 'static'
# ]
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#
# # settings.py
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# # Configuration pour les uploads de fichiers
# FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
# DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
#
# # Sécurité : Types de fichiers autorisés
# ALLOWED_UPLOAD_EXTENSIONS = [
#     '.jpg', '.jpeg', '.png', '.gif',  # Images
#     '.pdf', '.doc', '.docx',          # Documents
#     '.txt'                            # Texte
# ]
# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
#
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',
# ]


"""
Django settings for lanfiasave project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-z)xlo_#r7lblxct2w(ile6(xo)iv=8#i3(9ayr9-x(&h3l8dsq')
# Supprimer les warnings TensorFlow/CUDA
os.environ.setdefault('CUDA_VISIBLE_DEVICES', '-1')
os.environ.setdefault('TF_CPP_MIN_LOG_LEVEL', '2')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'

# Détection de l'environnement de production
IS_RENDER = os.environ.get('RENDER')

# Configuration des hôtes autorisés
if IS_RENDER:
    ALLOWED_HOSTS = [
        'lanfiasave.onrender.com',
        '.onrender.com',  # Permet tous les sous-domaines Render
        '*',  # Autorise tous les hôtes en production
    ]
else:
    ALLOWED_HOSTS = [
        '127.0.0.1',
        '192.168.1.102',
        'localhost',
        'lanfiasave.onrender.com',
        '*',  # Autorise tous les hôtes en développement
    ]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'users',
    'donations',
    'detection',
    'notifications',
    'rest_framework',
    'rest_framework.authtoken',
    'formation',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Doit être en première position
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Pour servir les fichiers statiques sur Render
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Configuration CORS
if IS_RENDER:
    CORS_ALLOWED_ORIGINS = [
        "https://lanfiasave.onrender.com",
    ]
    CORS_ORIGIN_WHITELIST = [
        'https://lanfiasave.onrender.com',
    ]
    CSRF_TRUSTED_ORIGINS = [
        "https://lanfiasave.onrender.com",
    ]
    # Configuration sécurisée pour la production
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
else:
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:8000",
        "http://192.168.100.27:8000",
        "http://127.0.0.1:8000",
        "http://localhost:52589",

    ]
    CORS_ORIGIN_WHITELIST = [
        'http://192.168.100.27:8000',
        'http://localhost',
        'http://127.0.0.1',
    ]
    CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS
    # Configuration pour le développement
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False

# Configuration des cookies
CSRF_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_HTTPONLY = True

# Configuration Celery
if IS_RENDER:
    # Configuration Redis pour Render (ajustez selon votre setup Redis)
    CELERY_BROKER_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379/0')
    CELERY_RESULT_BACKEND = os.environ.get('REDIS_URL', 'redis://localhost:6379/0')
else:
    # Configuration locale
    CELERY_TASK_ALWAYS_EAGER = True
    CELERY_TASK_EAGER_PROPAGATES = True
    CELERY_BROKER_URL = 'redis://localhost:6379/0'
    CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'

# Configuration d'authentification REST
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# Configuration supplémentaire CORS
CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken']
CORS_ALLOW_CREDENTIALS = True

if not IS_RENDER:
    CORS_ALLOW_ALL_ORIGINS = True

LOGIN_URL = '/users/login/'
ROOT_URLCONF = 'lanfiasave.urls'
AUTH_USER_MODEL = 'users.User'

from corsheaders.defaults import default_headers
CORS_ALLOW_HEADERS = list(default_headers) + [
    'authorization',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lanfiasave.wsgi.application'

# Database
if IS_RENDER:
    # Configuration PostgreSQL pour Render
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.config(
            default=os.environ.get('DATABASE_URL'),
            conn_max_age=600
        )
    }
else:
    # Configuration SQLite pour le développement
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Configuration WhiteNoise pour la compression des fichiers statiques
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configuration pour les uploads de fichiers
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10MB

# Sécurité : Types de fichiers autorisés
ALLOWED_UPLOAD_EXTENSIONS = [
    '.jpg', '.jpeg', '.png', '.gif',  # Images
    '.pdf', '.doc', '.docx',          # Documents
    '.txt'                            # Texte
]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# Logging pour la production
if IS_RENDER:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'root': {
            'handlers': ['console'],
        },
        'loggers': {
            'django': {
                'handlers': ['console'],
                'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
                'propagate': False,
            },
        },
    }