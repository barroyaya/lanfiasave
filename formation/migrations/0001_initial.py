# Generated by Django 5.1.4 on 2025-07-08 04:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0035_alter_personnevulnerable_entite'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom de la formation')),
                ('type_formation', models.CharField(choices=[('agriculture', 'Agriculture'), ('couture', 'Couture'), ('mecanique', 'Mécanique'), ('cuisine', 'Cuisine'), ('tic', "Technologies de l'Information"), ('menuiserie', 'Menuiserie'), ('coiffure', 'Coiffure'), ('commerce', 'Commerce'), ('artisanat', 'Artisanat'), ('elevage', 'Élevage'), ('autre', 'Autre')], max_length=50, verbose_name='Type de formation')),
                ('description', models.TextField(verbose_name='Description de la formation')),
                ('duree_semaines', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(104)], verbose_name='Durée en semaines')),
                ('niveau_requis', models.CharField(choices=[('aucun', 'Aucun prérequis'), ('primaire', 'Niveau primaire'), ('secondaire', 'Niveau secondaire'), ('technique', 'Formation technique antérieure')], default='aucun', max_length=50, verbose_name='Niveau requis')),
                ('age_min', models.PositiveIntegerField(default=18, verbose_name='Âge minimum')),
                ('age_max', models.PositiveIntegerField(default=45, verbose_name='Âge maximum')),
                ('cout_formation', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Coût de la formation (FCFA)')),
                ('places_disponibles', models.PositiveIntegerField(default=20, verbose_name='Nombre de places disponibles')),
                ('est_active', models.BooleanField(default=True, verbose_name='Formation active')),
                ('competences_acquises', models.TextField(help_text='Liste des compétences que les participants acquerront', verbose_name='Compétences acquises')),
                ('prerequis_materiels', models.TextField(blank=True, help_text='Matériel nécessaire pour suivre la formation', verbose_name='Prérequis matériels')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='DemandeFormation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('motivation_principale', models.CharField(choices=[('emploi', 'Trouver un emploi'), ('autonomie', 'Devenir autonome'), ('creation_entreprise', 'Créer une entreprise'), ('amelioration_competences', 'Améliorer mes compétences'), ('reconversion', 'Me reconvertir'), ('passion', 'Suivre ma passion')], max_length=50, verbose_name='Motivation principale')),
                ('experience_anterieure', models.TextField(blank=True, verbose_name='Expérience antérieure dans le domaine')),
                ('competences_actuelles', models.TextField(blank=True, verbose_name='Compétences actuelles')),
                ('disponibilite_horaire', models.CharField(max_length=100, verbose_name='Disponibilité horaire')),
                ('contraintes_personnelles', models.TextField(blank=True, verbose_name='Contraintes personnelles')),
                ('a_idee_projet', models.BooleanField(default=False, verbose_name='A une idée de projet post-formation')),
                ('description_projet', models.TextField(blank=True, verbose_name='Description du projet envisagé')),
                ('souhaite_financement', models.BooleanField(default=False, verbose_name='Souhaite un financement après formation')),
                ('montant_financement', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Montant de financement estimé (FCFA)')),
                ('accepte_mentoring', models.BooleanField(default=True, verbose_name="Accepte d'être accompagné par un mentor")),
                ('statut', models.CharField(choices=[('en_attente', "En attente d'analyse"), ('analysee', 'Analysée par IA'), ('acceptee', 'Acceptée'), ('refusee', 'Refusée'), ('en_cours', 'Formation en cours'), ('terminee', 'Formation terminée'), ('abandonnee', 'Formation abandonnée')], default='en_attente', max_length=50, verbose_name='Statut de la demande')),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_analyse', models.DateTimeField(blank=True, null=True)),
                ('date_decision', models.DateTimeField(blank=True, null=True)),
                ('score_formabilite', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Score de formabilité (%)')),
                ('analyse_llm', models.TextField(blank=True, verbose_name='Analyse détaillée par LLM')),
                ('recommandations_llm', models.TextField(blank=True, verbose_name='Recommandations du LLM')),
                ('criteres_evaluacion', models.JSONField(default=dict, verbose_name="Critères d'évaluation détaillés")),
                ('commentaire_decision', models.TextField(blank=True, verbose_name='Commentaire sur la décision')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes_formation', to='users.personnevulnerable', verbose_name='Demandeur')),
                ('responsable_decision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsable de la décision')),
                ('formation_souhaitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes_formation', to='formation.formation', verbose_name='Formation souhaitée')),
            ],
            options={
                'verbose_name': 'Demande de formation',
                'verbose_name_plural': 'Demandes de formation',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='ProjetVie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titre_projet', models.CharField(max_length=200, verbose_name='Titre du projet')),
                ('description', models.TextField(verbose_name='Description du projet')),
                ('secteur_activite', models.CharField(max_length=100, verbose_name="Secteur d'activité")),
                ('budget_estime', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Budget estimé (FCFA)')),
                ('type_financement', models.CharField(choices=[('autofinancement', 'Autofinancement'), ('microcredit', 'Microcrédit'), ('subvention', 'Subvention'), ('investisseur', 'Investisseur privé'), ('mixte', 'Financement mixte')], max_length=50, verbose_name='Type de financement souhaité')),
                ('statut', models.CharField(choices=[('idee', 'Idée'), ('planification', 'En planification'), ('validation', 'En validation'), ('finance', 'Financé'), ('en_cours', 'En cours de réalisation'), ('realise', 'Réalisé'), ('abandonne', 'Abandonné')], default='idee', max_length=50, verbose_name='Statut du projet')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('faisabilite_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Score de faisabilité (%)')),
                ('analyse_ia', models.TextField(blank=True, verbose_name='Analyse par IA')),
                ('recommandations', models.TextField(blank=True, verbose_name='Recommandations')),
                ('personne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projets_vie', to='users.personnevulnerable', verbose_name='Personne')),
            ],
            options={
                'verbose_name': 'Projet de vie',
                'verbose_name_plural': 'Projets de vie',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ParcoursFormation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_debut_formation', models.DateField(blank=True, null=True)),
                ('date_fin_formation', models.DateField(blank=True, null=True)),
                ('date_certification', models.DateField(blank=True, null=True)),
                ('statut_actuel', models.CharField(choices=[('pre_inscrit', 'Pré-inscrit à une formation'), ('forme', 'Formé(e)'), ('projet_valide', 'Projet validé'), ('financement_valide', 'Accompagnement financier validé'), ('suivi_3mois', 'Suivi 3 mois'), ('suivi_6mois', 'Suivi 6 mois'), ('suivi_12mois', 'Suivi 12 mois'), ('autonome', 'Autonome')], default='pre_inscrit', max_length=50, verbose_name='Statut actuel')),
                ('pourcentage_completion', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pourcentage de completion (%)')),
                ('note_formation', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Note de formation (/20)')),
                ('competences_validees', models.TextField(blank=True, verbose_name='Compétences validées')),
                ('financement_obtenu', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Financement obtenu (FCFA)')),
                ('type_financement_obtenu', models.CharField(blank=True, choices=[('autofinancement', 'Autofinancement'), ('microcredit', 'Microcrédit'), ('subvention', 'Subvention'), ('investisseur', 'Investisseur privé'), ('mixte', 'Financement mixte')], max_length=50, verbose_name='Type de financement obtenu')),
                ('evaluation_3mois', models.TextField(blank=True, verbose_name='Évaluation 3 mois')),
                ('evaluation_6mois', models.TextField(blank=True, verbose_name='Évaluation 6 mois')),
                ('evaluation_12mois', models.TextField(blank=True, verbose_name='Évaluation 12 mois')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('demande_formation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parcours', to='formation.demandeformation', verbose_name='Demande de formation')),
                ('mentor_assigne', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentorings', to=settings.AUTH_USER_MODEL, verbose_name='Mentor assigné')),
                ('projet_vie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parcours_formation', to='formation.projetvie', verbose_name='Projet de vie associé')),
            ],
            options={
                'verbose_name': 'Parcours de formation',
                'verbose_name_plural': 'Parcours de formation',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='SuiviProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_suivi', models.DateTimeField(auto_now_add=True)),
                ('type_suivi', models.CharField(choices=[('formation', 'Suivi formation'), ('projet', 'Suivi projet'), ('financement', 'Suivi financement'), ('mentoring', 'Session mentoring'), ('evaluation', 'Évaluation')], max_length=50, verbose_name='Type de suivi')),
                ('titre', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('note_progression', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Note progression (/10)')),
                ('points_forts', models.TextField(blank=True, verbose_name='Points forts')),
                ('points_amelioration', models.TextField(blank=True, verbose_name='Points à améliorer')),
                ('prochaines_etapes', models.TextField(blank=True, verbose_name='Prochaines étapes')),
                ('parcours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivis', to='formation.parcoursformation', verbose_name='Parcours')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Responsable du suivi')),
            ],
            options={
                'verbose_name': 'Suivi de progression',
                'verbose_name_plural': 'Suivis de progression',
                'ordering': ['-date_suivi'],
            },
        ),
    ]
